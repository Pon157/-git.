function updateStaffTable(staff) {
    const tbody = document.querySelector('#staffTable tbody');
    if (!tbody) return;
    
    if (staff.length === 0) {
        tbody.innerHTML = `
            <tr>
                <td colspan="6" class="text-center" style="padding: 40px; color: #7f8c8d;">
                    üòî –ü–µ—Ä—Å–æ–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
                    <div style="margin-top: 10px; font-size: 14px;">
                        <button class="btn btn-primary btn-small" onclick="showAddStaffModal()">
                            ‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
                        </button>
                    </div>
                </td>
            </tr>
        `;
        return;
    }
    
    tbody.innerHTML = staff.map(staffMember => `
        <tr>
            <td>
                <div style="display: flex; align-items: center; gap: 10px;">
                    <div style="width: 8px; height: 8px; border-radius: 50%; background: ${staffMember.isOnline ? '#27ae60' : '#7f8c8d'};"></div>
                    ${staffMember.username}
                </div>
            </td>
            <td>${staffMember.displayName || staffMember.username}</td>
            <td>
                <span class="role-badge role-${staffMember.role}">
                    ${getRoleDisplayName(staffMember.role)}
                </span>
            </td>
            <td>
                <span class="${staffMember.isOnline ? 'status-online' : 'status-offline'}">
                    ${staffMember.isOnline ? '‚óè –û–Ω–ª–∞–π–Ω' : '‚óã –û—Ñ–ª–∞–π–Ω'}
                </span>
            </td>
            <td>
                ${staffMember.role === 'listener' ? 
                    `<div style="display: flex; align-items: center; gap: 5px;">
                        <span style="color: #f39c12;">‚òÖ</span>
                        <span>${(staffMember.rating || 0).toFixed(1)}</span>
                        <span style="font-size: 12px; color: #7f8c8d;">(${staffMember.ratingCount || 0})</span>
                    </div>` : 
                    '<span style="color: #7f8c8d; font-size: 12px;">‚Äî</span>'
                }
            </td>
            <td>
                <div style="display: flex; gap: 5px; flex-wrap: wrap;">
                    ${staffMember.role !== 'admin' ? 
                        `<button class="btn btn-small btn-secondary" onclick="demoteToUser('${staffMember.id}')" title="–ü–æ–Ω–∏–∑–∏—Ç—å –¥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è">
                            üë§
                        </button>` : 
                        '<span style="color: #7f8c8d; font-size: 12px;" title="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä">üëë</span>'
                    }
                    <button class="btn btn-small btn-primary" onclick="editStaff('${staffMember.id}')" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                        ‚úèÔ∏è
                    </button>
                    ${staffMember.role !== 'admin' ? 
                        `<button class="btn btn-small btn-danger" onclick="deleteStaff('${staffMember.id}')" title="–£–¥–∞–ª–∏—Ç—å">
                            üóëÔ∏è
                        </button>` : ''
                    }
                </div>
            </td>
        </tr>
    `).join('');
}

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º
function editStaff(userId) {
    const staffMember = users.find(u => u.id === userId);
    if (!staffMember) return;
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–∞–Ω–Ω—ã–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    document.getElementById('newStaffUsername').value = staffMember.username;
    document.getElementById('newStaffName').value = staffMember.displayName || '';
    document.getElementById('newStaffRole').value = staffMember.role;
    
    // –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
    const btn = document.querySelector('#addStaffModal .btn-primary');
    btn.innerHTML = '<span>üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</span>';
    btn.onclick = function() { updateStaff(userId); };
    
    showAddStaffModal();
}

function updateStaff(userId) {
    const username = document.getElementById('newStaffUsername').value.trim();
    const password = document.getElementById('newStaffPassword').value.trim();
    const name = document.getElementById('newStaffName').value.trim();
    const role = document.getElementById('newStaffRole').value;

    if (!username || !name) {
        showNotification('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!', 'error');
        return;
    }

    if (socket && socket.connected) {
        console.log('‚úèÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:', { userId, username, role });
        socket.emit('update_staff', { 
            userId,
            username, 
            password: password || undefined, // —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–∞—Ä–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω
            displayName: name, 
            role 
        });
    }

    closeAddStaffModal();
}

function deleteStaff(userId) {
    if (confirm('‚ùå –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞?')) {
        if (socket && socket.connected) {
            console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:', userId);
            socket.emit('delete_staff', { userId });
        }
    }
}

// –°–±—Ä–∞—Å—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
function closeAddStaffModal() {
    document.getElementById('addStaffModal').classList.add('hidden');
    document.getElementById('newStaffUsername').value = '';
    document.getElementById('newStaffPassword').value = '';
    document.getElementById('newStaffName').value = '';
    document.getElementById('newStaffRole').value = 'listener';
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –∫–Ω–æ–ø–∫—É
    const btn = document.querySelector('#addStaffModal .btn-primary');
    btn.innerHTML = '<span>‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</span>';
    btn.onclick = addNewStaff;
}

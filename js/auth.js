// –§—É–Ω–∫—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
function setupAuthEventListeners() {
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
    
    // –¢–∞–±—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    document.querySelectorAll('.tab').forEach(tab => {
        tab.addEventListener('click', function() {
            const tabName = this.getAttribute('data-tab');
            showAuthTab(tabName);
        });
    });

    // –ö–Ω–æ–ø–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const loginBtn = document.getElementById('loginBtn');
    const registerBtn = document.getElementById('registerBtn');
    
    if (loginBtn) {
        loginBtn.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            console.log('üñ±Ô∏è –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞ –Ω–∞–∂–∞—Ç–∞');
            login();
        });
    }
    
    if (registerBtn) {
        registerBtn.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            console.log('üñ±Ô∏è –ö–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–∂–∞—Ç–∞');
            register();
        });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ Enter
    const authPassword = document.getElementById('authPassword');
    const regPasswordConfirm = document.getElementById('regPasswordConfirm');
    
    if (authPassword) {
        authPassword.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                login();
            }
        });
    }
    
    if (regPasswordConfirm) {
        regPasswordConfirm.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                register();
            }
        });
    }

    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
}

function showAuthTab(tabName) {
    console.log('üîÄ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ç–∞–±:', tabName);
    document.querySelectorAll('.tab').forEach(tab => {
        tab.classList.toggle('active', tab.getAttribute('data-tab') === tabName);
    });

    document.getElementById('loginForm').classList.toggle('hidden', tabName !== 'login');
    document.getElementById('registerForm').classList.toggle('hidden', tabName !== 'register');
}

function login() {
    console.log('=== –í–´–ó–í–ê–ù–ê –§–£–ù–ö–¶–ò–Ø LOGIN ===');
    
    const usernameInput = document.getElementById('authUsername');
    const passwordInput = document.getElementById('authPassword');
    
    if (!usernameInput || !passwordInput) {
        console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
        showNotification('‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º—ã!', 'error');
        return;
    }

    const username = usernameInput.value.trim();
    const password = passwordInput.value.trim();

    console.log('üìù –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:', { username, password });

    if (!username || !password) {
        showNotification('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!', 'error');
        return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    const loginBtn = document.getElementById('loginBtn');
    if (loginBtn) {
        const originalText = loginBtn.innerHTML;
        loginBtn.innerHTML = '<div class="loading"></div><span>–í—Ö–æ–¥...</span>';
        loginBtn.disabled = true;
        
        // –ê–≤—Ç–æ-–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            loginBtn.innerHTML = originalText;
            loginBtn.disabled = false;
        }, 5000);
    }

    if (socket && socket.connected) {
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—Ö–æ–¥...');
        socket.emit('login', { username, password });
    } else {
        console.error('‚ùå –°–æ–∫–µ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω!');
        showNotification('‚ùå –ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º', 'error');
        if (loginBtn) {
            loginBtn.innerHTML = '<span>üö™ –í–æ–π—Ç–∏</span>';
            loginBtn.disabled = false;
        }
    }
}

function register() {
    console.log('=== –í–´–ó–í–ê–ù–ê –§–£–ù–ö–¶–ò–Ø REGISTER ===');
    
    const usernameInput = document.getElementById('regUsername');
    const passwordInput = document.getElementById('regPassword');
    const passwordConfirmInput = document.getElementById('regPasswordConfirm');
    
    if (!usernameInput || !passwordInput || !passwordConfirmInput) {
        console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
        showNotification('‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º—ã!', 'error');
        return;
    }

    const username = usernameInput.value.trim();
    const password = passwordInput.value.trim();
    const passwordConfirm = passwordConfirmInput.value.trim();

    console.log('üìù –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', { username, password });

    if (!username || !password || !passwordConfirm) {
        showNotification('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!', 'error');
        return;
    }

    if (password !== passwordConfirm) {
        showNotification('‚ùå –ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!', 'error');
        return;
    }

    if (password.length < 6) {
        showNotification('‚ùå –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤!', 'error');
        return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    const registerBtn = document.getElementById('registerBtn');
    if (registerBtn) {
        const originalText = registerBtn.innerHTML;
        registerBtn.innerHTML = '<div class="loading"></div><span>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...</span>';
        registerBtn.disabled = true;
        
        // –ê–≤—Ç–æ-–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            registerBtn.innerHTML = originalText;
            registerBtn.disabled = false;
        }, 5000);
    }

    if (socket && socket.connected) {
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é...');
        socket.emit('register', { 
            username, 
            password,
            role: 'user'
        });
    } else {
        console.error('‚ùå –°–æ–∫–µ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω!');
        showNotification('‚ùå –ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º', 'error');
        if (registerBtn) {
            registerBtn.innerHTML = '<span>üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</span>';
            registerBtn.disabled = false;
        }
    }
}

function handleLoginSuccess(user) {
    console.log('üéâ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user);
    currentUser = user;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é
    localStorage.setItem('currentUserId', user.id);
    localStorage.setItem('currentUser', JSON.stringify(user));
    
    showNotification(`‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${user.displayName || user.username}!`, 'success');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –æ–Ω–ª–∞–π–Ω
    startOnlineTimer();
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ —Ä–æ–ª–∏
    if (user.role === 'user') {
        showUserInterface();
    } else if (user.role === 'listener') {
        showListenerInterface();
    } else if (user.role === 'admin') {
        showAdminPanel();
    }
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω–∫—É –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞
    setTimeout(forceAdminForOwner, 100);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–∫–µ—Ç–æ–≤ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
socket.on('login_success', (data) => {
    console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥:', data);
    handleLoginSuccess(data.user);
});

socket.on('login_error', (data) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', data);
    showNotification(`‚ùå ${data.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞!'}`, 'error');
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞
    const loginBtn = document.getElementById('loginBtn');
    if (loginBtn) {
        loginBtn.innerHTML = '<span>üö™ –í–æ–π—Ç–∏</span>';
        loginBtn.disabled = false;
    }
});

socket.on('register_success', (data) => {
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:', data);
    showNotification('‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏.', 'success');
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –≤—Ö–æ–¥–∞
    showAuthTab('login');
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const registerBtn = document.getElementById('registerBtn');
    if (registerBtn) {
        registerBtn.innerHTML = '<span>üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</span>';
        registerBtn.disabled = false;
    }
});

socket.on('register_error', (data) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', data);
    showNotification(`‚ùå ${data.message || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!'}`, 'error');
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const registerBtn = document.getElementById('registerBtn');
    if (registerBtn) {
        registerBtn.innerHTML = '<span>üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</span>';
        registerBtn.disabled = false;
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–∫–µ—Ç–æ–≤ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
socket.on('staff_registered', (data) => {
    showNotification('‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', 'success');
    updateAdminData();
});

socket.on('staff_updated', (data) => {
    showNotification('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!', 'success');
    updateAdminData();
});

socket.on('staff_deleted', (data) => {
    showNotification('‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ —É–¥–∞–ª–µ–Ω!', 'success');
    updateAdminData();
});

socket.on('role_changed', (data) => {
    showNotification('‚úÖ –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑–º–µ–Ω–µ–Ω–∞!', 'success');
    updateAdminData();
});

socket.on('notification_sent', (data) => {
    showNotification('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!', 'success');
    updateSentNotifications();
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω–∫—É –≤–ª–∞–¥–µ–ª—å—Ü–∞
function forceAdminForOwner() {
    if (currentUser && currentUser.username === 'admin') {
        console.log('üëë –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω–∫—É –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞');
        showAdminPanel();
    }
}

// –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
function logout() {
    console.log('üö™ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    
    if (socket && socket.connected) {
        socket.emit('logout');
    }
    
    // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é
    localStorage.removeItem('currentUserId');
    localStorage.removeItem('currentUser');
    currentUser = null;
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –æ–Ω–ª–∞–π–Ω
    stopOnlineTimer();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    hideAllInterfaces();
    document.getElementById('authScreen').classList.remove('hidden');
    
    showNotification('üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!', 'info');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –∏–º–µ–Ω–∏ —Ä–æ–ª–∏
function getRoleDisplayName(role) {
    const roleNames = {
        'admin': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        'listener': '–°–ª—É—à–∞—Ç–µ–ª—å', 
        'user': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
    };
    return roleNames[role] || role;
}

// –§—É–Ω–∫—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
function showAuthTab(tabName) {
    console.log('üîÄ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ç–∞–±:', tabName);
    document.querySelectorAll('.auth-tab').forEach(tab => {
        tab.classList.toggle('active', tab.getAttribute('data-tab') === tabName);
    });

    document.getElementById('loginForm').classList.toggle('hidden', tabName !== 'login');
    document.getElementById('registerForm').classList.toggle('hidden', tabName !== 'register');
}

function login() {
    console.log('=== –í–•–û–î –í –°–ò–°–¢–ï–ú–£ ===');
    
    const usernameInput = document.getElementById('authUsername');
    const passwordInput = document.getElementById('authPassword');
    
    if (!usernameInput || !passwordInput) {
        console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
        showNotification('‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º—ã!', 'error');
        return;
    }

    const username = usernameInput.value.trim();
    const password = passwordInput.value.trim();

    console.log('üìù –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:', { username });

    if (!username || !password) {
        showNotification('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!', 'error');
        return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    const loginBtn = document.getElementById('loginBtn');
    let originalText = '';
    if (loginBtn) {
        originalText = loginBtn.innerHTML;
        loginBtn.innerHTML = '<div class="loading-spinner"></div><span>–í—Ö–æ–¥...</span>';
        loginBtn.disabled = true;
    }

    if (socket && socket.connected) {
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—Ö–æ–¥...');
        socket.emit('login', { username, password });
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (loginBtn && loginBtn.disabled) {
                loginBtn.innerHTML = originalText;
                loginBtn.disabled = false;
                showNotification('‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞', 'error');
            }
        }, 5000);
    } else {
        console.error('‚ùå –°–æ–∫–µ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω!');
        showNotification('‚ùå –ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º', 'error');
        if (loginBtn) {
            loginBtn.innerHTML = originalText;
            loginBtn.disabled = false;
        }
    }
}

function register() {
    console.log('=== –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø ===');
    
    const usernameInput = document.getElementById('regUsername');
    const passwordInput = document.getElementById('regPassword');
    const passwordConfirmInput = document.getElementById('regPasswordConfirm');
    const displayNameInput = document.getElementById('regDisplayName');
    const emailInput = document.getElementById('regEmail');
    
    if (!usernameInput || !passwordInput || !passwordConfirmInput) {
        console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
        showNotification('‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º—ã!', 'error');
        return;
    }

    const username = usernameInput.value.trim();
    const password = passwordInput.value.trim();
    const passwordConfirm = passwordConfirmInput.value.trim();
    const displayName = displayNameInput ? displayNameInput.value.trim() : '';
    const email = emailInput ? emailInput.value.trim() : '';

    console.log('üìù –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', { username, email, displayName });

    if (!username || !password || !passwordConfirm) {
        showNotification('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!', 'error');
        return;
    }

    if (password !== passwordConfirm) {
        showNotification('‚ùå –ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!', 'error');
        return;
    }

    if (password.length < 6) {
        showNotification('‚ùå –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤!', 'error');
        return;
    }

    if (username.length < 3) {
        showNotification('‚ùå –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤!', 'error');
        return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    const registerBtn = document.getElementById('registerBtn');
    let originalText = '';
    if (registerBtn) {
        originalText = registerBtn.innerHTML;
        registerBtn.innerHTML = '<div class="loading-spinner"></div><span>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...</span>';
        registerBtn.disabled = true;
    }

    if (socket && socket.connected) {
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é...');
        socket.emit('register', { 
            username, 
            password,
            displayName,
            email,
            role: 'user'
        });
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (registerBtn && registerBtn.disabled) {
                registerBtn.innerHTML = originalText;
                registerBtn.disabled = false;
                showNotification('‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞', 'error');
            }
        }, 5000);
    } else {
        console.error('‚ùå –°–æ–∫–µ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω!');
        showNotification('‚ùå –ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º', 'error');
        if (registerBtn) {
            registerBtn.innerHTML = originalText;
            registerBtn.disabled = false;
        }
    }
}

// –§–£–ù–ö–¶–ò–ò –ü–û–ö–ê–ó–ê –ò–ù–¢–ï–†–§–ï–ô–°–û–í
function showUserInterface() {
    console.log('üë§ –ü–æ–∫–∞–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    hideAllInterfaces();
    document.getElementById('userInterface').style.display = 'block';
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    updateUserProfileUI();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    loadListenerCards();
    updateUserNotifications();
    
    showNotification('üë§ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!', 'success');
}

function showListenerInterface() {
    console.log('üéß –ü–æ–∫–∞–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å–ª—É—à–∞—Ç–µ–ª—è');
    hideAllInterfaces();
    document.getElementById('listenerInterface').style.display = 'block';
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–ª—É—à–∞—Ç–µ–ª—è
    updateListenerProfileUI();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    updateListenerChatsList();
    updateListenerReviewsData();
    updateListenerStats();
    updateListenerNotifications();
    
    showNotification('üéß –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–ª—É—à–∞—Ç–µ–ª—è!', 'success');
}

function showAdminPanel() {
    console.log('üëë –ü–æ–∫–∞–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏');
    hideAllInterfaces();
    document.getElementById('adminPanel').style.display = 'block';
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    updateAdminProfileUI();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    updateAdminData();
    
    showNotification('üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!', 'success');
}

function updateUserProfileUI() {
    if (!currentUser) return;
    
    const elements = [
        { id: 'userDisplayName', value: currentUser.displayName || currentUser.username },
        { id: 'userRole', value: getRoleDisplayName(currentUser.role) },
        { id: 'userAvatar', value: currentUser.avatar || 'üë§' },
        { id: 'userEmail', value: currentUser.email || '–ù–µ —É–∫–∞–∑–∞–Ω' },
        { id: 'userJoinDate', value: new Date(currentUser.createdAt).toLocaleDateString('ru-RU') }
    ];
    
    elements.forEach(element => {
        const el = document.getElementById(element.id);
        if (el) {
            el.textContent = element.value;
        }
    });
}

function updateListenerProfileUI() {
    if (!currentUser) return;
    
    const elements = [
        { id: 'listenerDisplayName', value: currentUser.displayName || currentUser.username },
        { id: 'listenerRole', value: getRoleDisplayName(currentUser.role) },
        { id: 'listenerAvatar', value: currentUser.avatar || 'üéß' },
        { id: 'listenerRatingValue', value: (currentUser.rating || 0).toFixed(1) },
        { id: 'listenerRatingCount', value: currentUser.ratingCount || 0 },
        { id: 'listenerEmail', value: currentUser.email || '–ù–µ —É–∫–∞–∑–∞–Ω' }
    ];
    
    elements.forEach(element => {
        const el = document.getElementById(element.id);
        if (el) {
            el.textContent = element.value;
        }
    });
}

function updateAdminProfileUI() {
    if (!currentUser) return;
    
    const elements = [
        { id: 'adminDisplayName', value: currentUser.displayName || currentUser.username },
        { id: 'adminRole', value: getRoleDisplayName(currentUser.role) },
        { id: 'adminAvatar', value: currentUser.avatar || '‚öôÔ∏è' },
        { id: 'adminEmail', value: currentUser.email || '–ù–µ —É–∫–∞–∑–∞–Ω' }
    ];
    
    elements.forEach(element => {
        const el = document.getElementById(element.id);
        if (el) {
            el.textContent = element.value;
        }
    });
}

// Enter –¥–ª—è —Ñ–æ—Ä–º
document.addEventListener('DOMContentLoaded', function() {
    // Enter –≤ —Ñ–æ—Ä–º–µ –≤—Ö–æ–¥–∞
    document.getElementById('authPassword')?.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') login();
    });

    // Enter –≤ —Ñ–æ—Ä–º–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏  
    document.getElementById('regPasswordConfirm')?.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') register();
    });
});

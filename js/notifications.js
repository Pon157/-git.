// –ú–æ–¥—É–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const notifications = {
    // –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    sendTechnical() {
        const title = document.getElementById('notificationTitle')?.value.trim();
        const text = document.getElementById('notificationText')?.value.trim();
        const type = document.getElementById('notificationType')?.value;
        const recipients = document.getElementById('notificationRecipients')?.value;

        if (!title || !text) {
            utils.showNotification('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!', 'error');
            return;
        }

        console.log('üì¢ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', { title, text, type, recipients });
        
        if (socket && socket.connected) {
            socket.emit('send_technical_notification', {
                title,
                text,
                type,
                recipients
            });
        } else {
            utils.showNotification('‚ùå –ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º', 'error');
        }
    },

    // –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    getNotificationTypeDisplay(type) {
        const types = {
            'info': '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
            'warning': '‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', 
            'error': 'üî¥ –í–∞–∂–Ω–æ–µ'
        };
        return types[type] || type;
    },

    // –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
    getRecipientsDisplay(recipients) {
        const recipientsMap = {
            'all': 'üëã –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
            'users': 'üë§ –¢–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
            'listeners': 'üéß –¢–æ–ª—å–∫–æ —Å–ª—É—à–∞—Ç–µ–ª–∏',
            'admins': 'üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è'
        };
        return recipientsMap[recipients] || recipients;
    },

    // –û–±–Ω–æ–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    updateUserNotifications() {
        const container = document.getElementById('userNotificationsContainer');
        if (!container) return;
        
        const userNotifications = notifications.filter(notification => 
            notification.recipients === 'all' || notification.recipients === 'users'
        );
        
        if (userNotifications.length === 0) {
            container.innerHTML = `
                <div style="text-align: center; padding: 40px; color: #7f8c8d;">
                    <div>üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç</div>
                    <div style="font-size: 14px; margin-top: 10px;">–ó–¥–µ—Å—å –±—É–¥—É—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –≤–∞–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏</div>
                </div>
            `;
            return;
        }

        container.innerHTML = userNotifications.map(notification => `
            <div class="review-item">
                <div class="review-header">
                    <div style="font-weight: 600;">${notification.title}</div>
                    <div style="font-size: 12px; color: #7f8c8d;">
                        ${this.getNotificationTypeDisplay(notification.type)}
                    </div>
                </div>
                <div class="review-date">
                    ${utils.formatDate(notification.timestamp)}
                </div>
                <div class="review-text" style="margin-top: 10px; padding-top: 10px; border-top: 1px solid var(--border-color);">
                    ${notification.text}
                </div>
            </div>
        `).join('');
    },

    // –û–±–Ω–æ–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–ª—É—à–∞—Ç–µ–ª—è
    updateListenerNotifications() {
        const container = document.getElementById('listenerNotificationsContainer');
        if (!container) return;
        
        const listenerNotifications = notifications.filter(notification => 
            notification.recipients === 'all' || notification.recipients === 'listeners'
        );
        
        if (listenerNotifications.length === 0) {
            container.innerHTML = `
                <div style="text-align: center; padding: 40px; color: #7f8c8d;">
                    <div>üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç</div>
                    <div style="font-size: 14px; margin-top: 10px;">–ó–¥–µ—Å—å –±—É–¥—É—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –≤–∞–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏</div>
                </div>
            `;
            return;
        }

        container.innerHTML = listenerNotifications.map(notification => `
            <div class="review-item">
                <div class="review-header">
                    <div style="font-weight: 600;">${notification.title}</div>
                    <div style="font-size: 12px; color: #7f8c8d;">
                        ${this.getNotificationTypeDisplay(notification.type)}
                    </div>
                </div>
                <div class="review-date">
                    ${utils.formatDate(notification.timestamp)}
                </div>
                <div class="review-text" style="margin-top: 10px; padding-top: 10px; border-top: 1px solid var(--border-color);">
                    ${notification.text}
                </div>
            </div>
        `).join('');
    },

    // –û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    updateSentNotifications() {
        const container = document.getElementById('sentNotificationsContainer');
        if (!container) return;
        
        if (notifications.length === 0) {
            container.innerHTML = '<div style="text-align: center; padding: 20px; color: #7f8c8d;">üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç</div>';
            return;
        }

        container.innerHTML = notifications.map(notification => `
            <div class="review-item">
                <div class="review-header">
                    <div style="font-weight: 600;">${notification.title}</div>
                    <div style="font-size: 12px; color: #7f8c8d;">
                        ${this.getNotificationTypeDisplay(notification.type)}
                    </div>
                </div>
                <div class="review-date">
                    ${utils.formatDate(notification.timestamp)} ‚Ä¢ 
                    ${this.getRecipientsDisplay(notification.recipients)}
                </div>
                <div class="review-text" style="margin-top: 10px; padding-top: 10px; border-top: 1px solid var(--border-color);">
                    ${notification.text}
                </div>
            </div>
        `).join('');
    },

    // –û–±–Ω–æ–≤–∏—Ç—å UI —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    updateUI() {
        if (!currentUser) return;

        if (currentUser.role === 'user') {
            this.updateUserNotifications();
        } else if (currentUser.role === 'listener') {
            this.updateListenerNotifications();
        } else if (currentUser.role === 'admin') {
            this.updateSentNotifications();
        }
    },

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init() {
        this.setupEventListeners();
    },

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners() {
        document.getElementById('sendNotificationBtn')?.addEventListener('click', () => {
            this.sendTechnical();
        });
    }
};
